// Projeto de Controle de Robô com Gamepad
// Desenvolvido pelo Professor Thiago Antonio Marcão para a Escola Otalipío.

// Inclusão de diretivas para configurações personalizadas e do módulo de gamepad
#define CUSTOM_SETTINGS
#define INCLUDE_GAMEPAD_MODULE
#include <Dabble.h>

// Definição dos pinos utilizados para controle de motores e LEDs
#define INT1 2
#define INT2 3
#define INT3 4
#define INT4 5
#define LED_PIN_11 11
#define LED_PIN_12 12
#define LED_PIN_13 13

// Configurações iniciais
void setup()
{
  Serial.begin(250000);
  Dabble.begin(9600, 7, 6);
  pinMode(INT1, OUTPUT);
  pinMode(INT2, OUTPUT);
  pinMode(INT3, OUTPUT);
  pinMode(INT4, OUTPUT);
  pinMode(LED_PIN_11, OUTPUT);
  pinMode(LED_PIN_12, OUTPUT);
  pinMode(LED_PIN_13, OUTPUT);
  stopCar(); // Corrigido para chamar a função stopCar() em vez de Stop()
}

// Loop principal
void loop()
{
  Dabble.processInput();

  if (GamePad.isUpPressed()) // Se o botão "cima" do gamepad for pressionado
  {
    moveForward();
    digitalWrite(LED_PIN_12, LOW);
    digitalWrite(LED_PIN_13, LOW);
  }
  else if (GamePad.isDownPressed()) // Se o botão "baixo" do gamepad for pressionado
  {
    moveBackward();
    digitalWrite(LED_PIN_12, LOW);
    digitalWrite(LED_PIN_13, LOW);
  }
  else if (GamePad.isLeftPressed()) // Se o botão "esquerda" do gamepad for pressionado
  {
    turnLeft();
    digitalWrite(LED_PIN_12, LOW);
    digitalWrite(LED_PIN_13, LOW);
  }
  else if (GamePad.isRightPressed()) // Se o botão "direita" do gamepad for pressionado
  {
    turnRight();
    digitalWrite(LED_PIN_12, LOW);
    digitalWrite(LED_PIN_13, LOW);
  }
  else // Se nenhum botão do gamepad estiver pressionado
  {
    stopCar();
    digitalWrite(LED_PIN_12, HIGH);
    digitalWrite(LED_PIN_13, HIGH);
  }
}

// Função para mover para a frente
void moveForward()
{
  digitalWrite(INT1, LOW);
  digitalWrite(INT2, HIGH);
  digitalWrite(INT3, HIGH);
  digitalWrite(INT4, LOW);
}

// Função para mover para trás
void moveBackward()
{
  digitalWrite(INT1, HIGH);
  digitalWrite(INT2, LOW);
  digitalWrite(INT3, LOW);
  digitalWrite(INT4, HIGH);
}

// Função para girar à esquerda
void turnLeft()
{
  digitalWrite(INT1, HIGH);
  digitalWrite(INT2, LOW);
  digitalWrite(INT3, HIGH);
  digitalWrite(INT4, LOW);
}

// Função para girar à direita
void turnRight()
{
  digitalWrite(INT1, LOW);
  digitalWrite(INT2, HIGH);
  digitalWrite(INT3, LOW);
  digitalWrite(INT4, HIGH);
}

// Função para parar o robô
void stopCar()
{
  digitalWrite(INT1, LOW);
  digitalWrite(INT2, LOW);
  digitalWrite(INT3, LOW);
  digitalWrite(INT4, LOW);
  digitalWrite(LED_PIN_12, LOW);
  digitalWrite(LED_PIN_13, LOW);
  digitalWrite(LED_PIN_11, HIGH);
}
