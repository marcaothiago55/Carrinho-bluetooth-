#define CUSTOM_SETTINGS
#define INCLUDE_GAMEPAD_MODULE
#include <Dabble.h>

#define INT1 2
#define INT2 3
#define INT3 4
#define INT4 5
#define LED_PIN_11 11
#define LED_PIN_12 12
#define LED_PIN_13 13

void setup()
{
  Serial.begin(250000);
  Dabble.begin(9600, 7, 6);
  pinMode(INT1, OUTPUT);
  pinMode(INT2, OUTPUT);
  pinMode(INT3, OUTPUT);
  pinMode(INT4, OUTPUT);
  pinMode(LED_PIN_11, OUTPUT);
  pinMode(LED_PIN_12, OUTPUT);
  pinMode(LED_PIN_13, OUTPUT);
  stopCar(); // Corrigido para chamar a função stopCar() em vez de Stop()
}

void loop()
{
  Dabble.processInput();

  if (GamePad.isUpPressed())
  {
    moveForward();
    digitalWrite(LED_PIN_12, LOW);
    digitalWrite(LED_PIN_13, LOW);
  }
  else if (GamePad.isDownPressed())
  {
    moveBackward();
    digitalWrite(LED_PIN_12, LOW);
    digitalWrite(LED_PIN_13, LOW);
  }
  else if (GamePad.isLeftPressed())
  {
    turnLeft();
    digitalWrite(LED_PIN_12, LOW);
    digitalWrite(LED_PIN_13, LOW);
  }
  else if (GamePad.isRightPressed())
  {
    turnRight();
    digitalWrite(LED_PIN_12, LOW);
    digitalWrite(LED_PIN_13, LOW);
  }
  else
  {
    stopCar();
    digitalWrite(LED_PIN_12, HIGH);
    digitalWrite(LED_PIN_13, HIGH);
  }
}

void moveForward()
{
  digitalWrite(INT1, LOW);
  digitalWrite(INT2, HIGH);
  digitalWrite(INT3, HIGH);
  digitalWrite(INT4, LOW);
}

void moveBackward()
{
  digitalWrite(INT1, HIGH);
  digitalWrite(INT2, LOW);
  digitalWrite(INT3, LOW);
  digitalWrite(INT4, HIGH);
}

void turnLeft()
{
  digitalWrite(INT1, HIGH);
  digitalWrite(INT2, LOW);
  digitalWrite(INT3, HIGH);
  digitalWrite(INT4, LOW);
}

void turnRight()
{
  digitalWrite(INT1, LOW);
  digitalWrite(INT2, HIGH);
  digitalWrite(INT3, LOW);
  digitalWrite(INT4, HIGH);
}

void stopCar()
{
  digitalWrite(INT1, LOW);
  digitalWrite(INT2, LOW);
  digitalWrite(INT3, LOW);
  digitalWrite(INT4, LOW);
  digitalWrite(LED_PIN_12, LOW);
  digitalWrite(LED_PIN_13, LOW);
  digitalWrite(LED_PIN_11, HIGH);
}
